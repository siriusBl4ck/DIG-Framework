//
// Generated by Bluespec Compiler, version 2021.12.1-27-g9a7d5e05 (build 9a7d5e05)
//
// On Wed Nov 30 04:56:01 IST 2022
//
//
// Ports:
// Name                         I/O  size props
// RDY_send                       O     1 const
// receive                        O    38 reg
// RDY_receive                    O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// send_operands                  I    67
// EN_send                        I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mk_fpu_add_sub_sp_instance(CLK,
				  RST_N,

				  send_operands,
				  EN_send,
				  RDY_send,

				  receive,
				  RDY_receive);
  input  CLK;
  input  RST_N;

`ifdef COCOTB_SIM
  initial begin
  	$dumpfile("fp_add.vcd");
	$dumpvars;
  end
  `endif

  // action method send
  input  [66 : 0] send_operands;
  input  EN_send;
  output RDY_send;

  // value method receive
  output [37 : 0] receive;
  output RDY_receive;

  // signals for module outputs
  wire [37 : 0] receive;
  wire RDY_receive, RDY_send;

  // register rg_stage_out_0
  reg [36 : 0] rg_stage_out_0;
  wire [36 : 0] rg_stage_out_0$D_IN;
  wire rg_stage_out_0$EN;

  // register rg_stage_out_1
  reg [36 : 0] rg_stage_out_1;
  wire [36 : 0] rg_stage_out_1$D_IN;
  wire rg_stage_out_1$EN;

  // register rg_stage_out_2
  reg [36 : 0] rg_stage_out_2;
  wire [36 : 0] rg_stage_out_2$D_IN;
  wire rg_stage_out_2$EN;

  // register rg_stage_out_3
  reg [36 : 0] rg_stage_out_3;
  wire [36 : 0] rg_stage_out_3$D_IN;
  wire rg_stage_out_3$EN;

  // register rg_stage_valid_0
  reg rg_stage_valid_0;
  wire rg_stage_valid_0$D_IN, rg_stage_valid_0$EN;

  // register rg_stage_valid_1
  reg rg_stage_valid_1;
  wire rg_stage_valid_1$D_IN, rg_stage_valid_1$EN;

  // register rg_stage_valid_2
  reg rg_stage_valid_2;
  wire rg_stage_valid_2$D_IN, rg_stage_valid_2$EN;

  // register rg_stage_valid_3
  reg rg_stage_valid_3;
  wire rg_stage_valid_3$D_IN, rg_stage_valid_3$EN;

  // remaining internal signals
  reg [30 : 0] CASE_guard109_0b0_IF_IF_IF_NOT_IF_send_operand_ETC__q10,
	       CASE_guard109_0b0_IF_IF_IF_NOT_IF_send_operand_ETC__q11,
	       IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d442;
  reg [22 : 0] CASE_guard109_0b0_theResult___snd_snd_sfd075_0_ETC__q6,
	       CASE_guard109_0b0_theResult___snd_snd_sfd075_0_ETC__q7,
	       _theResult___snd_sfd__h8665;
  reg [7 : 0] CASE_guard109_0b0_theResult___snd_snd_exp074_0_ETC__q4,
	      CASE_guard109_0b0_theResult___snd_snd_exp074_0_ETC__q5,
	      _theResult___snd_exp__h8664;
  reg CASE_guard109_0b0_IF_NOT_IF_send_operands_BITS_ETC__q8,
      CASE_guard109_0b0_IF_NOT_IF_send_operands_BITS_ETC__q9,
      IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d404;
  wire [30 : 0] IF_0b0_CONCAT_NOT_IF_NOT_send_operands_BITS_65_ETC___d427,
		IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423,
		IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d435,
		IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d437,
		IF_send_operands_BITS_33_TO_26_2_EQ_255_3_AND__ETC___d420,
		IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d444;
  wire [27 : 0] IF_0_CONCAT_IF_IF_IF_NOT_IF_send_operands_BITS_ETC__q2,
		IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d125,
		_0b0_CONCAT_IF_NOT_IF_send_operands_BITS_33_TO__ETC___d114,
		_theResult___snd__h8088,
		_theResult___snd__h8102,
		_theResult___snd__h8104,
		_theResult___snd__h8116,
		_theResult___snd__h8122,
		_theResult___snd__h8138,
		a__h2000,
		b__h2002,
		guard__h3657,
		opB__h2016,
		result__h3611,
		result__h3664,
		result__h3797,
		sfdA__h2033,
		sfdB__h2034,
		sfdin__h3123,
		sfdin__h8058;
  wire [26 : 0] IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d112;
  wire [24 : 0] sfd__h8167;
  wire [22 : 0] IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d357,
		IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_4__ETC___d358,
		IF_send_operands_BITS_33_TO_26_2_EQ_255_3_AND__ETC___d345,
		IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d346,
		IF_send_operands_BIT_66_4_EQ_send_operands_BIT_ETC___d340,
		_theResult___sfd__h8591,
		_theResult___snd_fst_sfd__h8068,
		_theResult___snd_sfd__h8668,
		_theResult___snd_snd_sfd__h8075,
		out_sfd__h8594,
		sfd__h3092,
		sfd__h3095;
  wire [9 : 0] IF_send_operands_BITS_33_TO_26_2_EQ_0_2_THEN_8_ETC___d75,
	       IF_send_operands_BITS_65_TO_58_3_EQ_0_6_THEN_8_ETC___d79,
	       x__h3621,
	       x__h3628;
  wire [8 : 0] IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d135;
  wire [7 : 0] IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d307,
	       IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d322,
	       IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_4__ETC___d324,
	       IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d333,
	       _theResult___exp__h8590,
	       _theResult___fst_exp__h8064,
	       _theResult___fst_exp__h8093,
	       _theResult___fst_exp__h8108,
	       _theResult___fst_exp__h8140,
	       _theResult___fst_exp__h8143,
	       _theResult___fst_exp__h8146,
	       _theResult___fst_exp__h8149,
	       _theResult___snd_exp__h8667,
	       _theResult___snd_fst_exp__h8067,
	       _theResult___snd_snd_exp__h8074,
	       b__h3503,
	       b__h3517,
	       diff__h2020,
	       din_exp021_MINUS_127__q1,
	       din_exp__h8021,
	       din_inc___2_exp__h8679,
	       out_exp__h8593,
	       y__h3723;
  wire [4 : 0] IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d252;
  wire [1 : 0] IF_sfdin058_BIT_4_THEN_2_ELSE_0__q3,
	       _theResult___snd_fst__h8196,
	       guard__h3074,
	       guard__h3109;
  wire IF_IF_send_operands_BITS_65_TO_58_3_EQ_255_4_A_ETC___d407,
       IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319,
       IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d99,
       IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d370,
       IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d385,
       IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d406,
       IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d410,
       IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d458,
       IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d464,
       NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_TH_ETC___d92,
       NOT_IF_send_operands_BITS_65_TO_58_3_EQ_255_4__ETC___d368,
       NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d383,
       NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d457,
       NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71,
       _0_CONCAT_IF_IF_IF_NOT_IF_send_operands_BITS_33_ETC___d255,
       send_operands_BITS_65_TO_58_3_EQ_255_4_AND_NOT_ETC___d49,
       send_operands_BIT_66_4_EQ_send_operands_BIT_34_3___d97,
       y__h3696;

  // action method send
  assign RDY_send = 1'd1 ;

  // value method receive
  assign receive = { rg_stage_valid_3, rg_stage_out_3 } ;
  assign RDY_receive = 1'd1 ;

  // register rg_stage_out_0
  assign rg_stage_out_0$D_IN =
	     { NOT_IF_send_operands_BITS_65_TO_58_3_EQ_255_4__ETC___d368 &&
	       IF_IF_send_operands_BITS_65_TO_58_3_EQ_255_4_A_ETC___d407,
	       IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d410 ?
		 31'h7FC00000 :
		 IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d444,
	       send_operands_BITS_65_TO_58_3_EQ_255_4_AND_NOT_ETC___d49 &&
	       (send_operands[65:58] == 8'd255 &&
		send_operands[57:35] != 23'd0 &&
		!send_operands[57] ||
		send_operands[33:26] == 8'd255 &&
		send_operands[25:3] != 23'd0 &&
		!send_operands[25] ||
		send_operands[65:58] == 8'd255 &&
		send_operands[57:35] == 23'd0 &&
		send_operands[33:26] == 8'd255 &&
		send_operands[25:3] == 23'd0 &&
		!send_operands_BIT_66_4_EQ_send_operands_BIT_34_3___d97),
	       1'd0,
	       IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d458,
	       NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 &&
	       _theResult___snd_fst_exp__h8067 == 8'd0 &&
	       guard__h3074 != 2'd0,
	       IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d464 } ;
  assign rg_stage_out_0$EN = EN_send ;

  // register rg_stage_out_1
  assign rg_stage_out_1$D_IN = rg_stage_out_0 ;
  assign rg_stage_out_1$EN = 1'd1 ;

  // register rg_stage_out_2
  assign rg_stage_out_2$D_IN = rg_stage_out_1 ;
  assign rg_stage_out_2$EN = 1'd1 ;

  // register rg_stage_out_3
  assign rg_stage_out_3$D_IN = rg_stage_out_2 ;
  assign rg_stage_out_3$EN = 1'd1 ;

  // register rg_stage_valid_0
  assign rg_stage_valid_0$D_IN = EN_send ;
  assign rg_stage_valid_0$EN = 1'd1 ;

  // register rg_stage_valid_1
  assign rg_stage_valid_1$D_IN = rg_stage_valid_0 ;
  assign rg_stage_valid_1$EN = 1'd1 ;

  // register rg_stage_valid_2
  assign rg_stage_valid_2$D_IN = rg_stage_valid_1 ;
  assign rg_stage_valid_2$EN = 1'd1 ;

  // register rg_stage_valid_3
  assign rg_stage_valid_3$D_IN = rg_stage_valid_2 ;
  assign rg_stage_valid_3$EN = 1'd1 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_IF_NOT_IF_send_operands_BITS_ETC__q2 =
	     _0_CONCAT_IF_IF_IF_NOT_IF_send_operands_BITS_33_ETC___d255 ?
	       _theResult___snd__h8138 :
	       sfdin__h3123 ;
  assign IF_0b0_CONCAT_NOT_IF_NOT_send_operands_BITS_65_ETC___d427 =
	     sfd__h8167[24] ?
	       ((_theResult___snd_snd_exp__h8074 == 8'd254) ?
		  31'h7F800000 :
		  { din_inc___2_exp__h8679, sfd__h8167[23:1] }) :
	       { IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d307,
		 sfd__h8167[22:0] } ;
  assign IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d252 =
	     (sfdin__h3123[27] ?
		5'd0 :
		(sfdin__h3123[26] ?
		   5'd1 :
		   (sfdin__h3123[25] ?
		      5'd2 :
		      (sfdin__h3123[24] ?
			 5'd3 :
			 (sfdin__h3123[23] ?
			    5'd4 :
			    (sfdin__h3123[22] ?
			       5'd5 :
			       (sfdin__h3123[21] ?
				  5'd6 :
				  (sfdin__h3123[20] ?
				     5'd7 :
				     (sfdin__h3123[19] ?
					5'd8 :
					(sfdin__h3123[18] ?
					   5'd9 :
					   (sfdin__h3123[17] ?
					      5'd10 :
					      (sfdin__h3123[16] ?
						 5'd11 :
						 (sfdin__h3123[15] ?
						    5'd12 :
						    (sfdin__h3123[14] ?
						       5'd13 :
						       (sfdin__h3123[13] ?
							  5'd14 :
							  (sfdin__h3123[12] ?
							     5'd15 :
							     (sfdin__h3123[11] ?
								5'd16 :
								(sfdin__h3123[10] ?
								   5'd17 :
								   (sfdin__h3123[9] ?
								      5'd18 :
								      (sfdin__h3123[8] ?
									 5'd19 :
									 (sfdin__h3123[7] ?
									    5'd20 :
									    (sfdin__h3123[6] ?
									       5'd21 :
									       (sfdin__h3123[5] ?
										  5'd22 :
										  (sfdin__h3123[4] ?
										     5'd23 :
										     (sfdin__h3123[3] ?
											5'd24 :
											(sfdin__h3123[2] ?
											   5'd25 :
											   (sfdin__h3123[1] ?
											      5'd26 :
											      (sfdin__h3123[0] ?
												 5'd27 :
												 5'd28)))))))))))))))))))))))))))) -
	     5'd1 ;
  assign IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423 =
	     (sfdin__h3123[27] &&
	      IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d135 ==
	      9'd127) ?
	       31'h7F7FFFFF :
	       { _theResult___fst_exp__h8064, sfdin__h8058[27:5] } ;
  assign IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d125 =
	     (diff__h2020 < 8'd28) ?
	       result__h3664 :
	       ((IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d112 ==
		 27'd0) ?
		  opB__h2016 :
		  28'd1) ;
  assign IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d135 =
	     (din_exp__h8021 == 8'd0) ?
	       9'd386 :
	       { din_exp021_MINUS_127__q1[7], din_exp021_MINUS_127__q1 } ;
  assign IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d307 =
	     (_theResult___snd_snd_exp__h8074 == 8'd0 &&
	      sfd__h8167[24:23] == 2'b01) ?
	       8'd1 :
	       _theResult___snd_snd_exp__h8074 ;
  assign IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d322 =
	     (guard__h3109 == 2'b0 ||
	      NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 &&
	      IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319) ?
	       _theResult___snd_snd_exp__h8074 :
	       _theResult___exp__h8590 ;
  assign IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d357 =
	     (guard__h3109 == 2'b0 ||
	      NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 &&
	      IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319) ?
	       _theResult___snd_snd_sfd__h8075 :
	       _theResult___sfd__h8591 ;
  assign IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d435 =
	     (guard__h3109 == 2'b0 ||
	      IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319) ?
	       IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423 :
	       IF_0b0_CONCAT_NOT_IF_NOT_send_operands_BITS_65_ETC___d427 ;
  assign IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d437 =
	     (guard__h3109 == 2'b0) ?
	       IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423 :
	       (IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319 ?
		  IF_0b0_CONCAT_NOT_IF_NOT_send_operands_BITS_65_ETC___d427 :
		  IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423) ;
  assign IF_IF_send_operands_BITS_65_TO_58_3_EQ_255_4_A_ETC___d407 =
	     (IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d370 &&
	      IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d385 &&
	      IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d99) ?
	       send_operands[2:0] == 3'd2 :
	       IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d406 ;
  assign IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d112 =
	     { NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_TH_ETC___d92 ?
		 send_operands[65:58] != 8'd0 :
		 send_operands[33:26] != 8'd0,
	       NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_TH_ETC___d92 ?
		 send_operands[57:35] :
		 send_operands[25:3],
	       3'b0 } ;
  assign IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319 =
	     NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_TH_ETC___d92 ?
	       send_operands[34] :
	       send_operands[66] ;
  assign IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d99 =
	     NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_TH_ETC___d92 ?
	       send_operands[34] != send_operands[66] :
	       !send_operands_BIT_66_4_EQ_send_operands_BIT_34_3___d97 ;
  assign IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_4__ETC___d324 =
	     (NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 &&
	      IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319) ?
	       _theResult___exp__h8590 :
	       _theResult___snd_snd_exp__h8074 ;
  assign IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_4__ETC___d358 =
	     (NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 &&
	      IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319) ?
	       _theResult___sfd__h8591 :
	       _theResult___snd_snd_sfd__h8075 ;
  assign IF_send_operands_BITS_33_TO_26_2_EQ_0_2_THEN_8_ETC___d75 =
	     (send_operands[33:26] == 8'd0) ?
	       10'd898 :
	       { {2{b__h3503[7]}}, b__h3503 } ;
  assign IF_send_operands_BITS_33_TO_26_2_EQ_255_3_AND__ETC___d345 =
	     (send_operands[33:26] == 8'd255 &&
	      send_operands[25:3] != 23'd0 &&
	      !send_operands[25]) ?
	       sfd__h3095 :
	       ((send_operands[65:58] == 8'd255 && send_operands[57]) ?
		  send_operands[57:35] :
		  ((send_operands[33:26] == 8'd255 && send_operands[25]) ?
		     send_operands[25:3] :
		     ((send_operands[65:58] == 8'd255 &&
		       send_operands[57:35] == 23'd0 &&
		       send_operands[33:26] == 8'd255 &&
		       send_operands[25:3] == 23'd0) ?
			IF_send_operands_BIT_66_4_EQ_send_operands_BIT_ETC___d340 :
			((send_operands[65:58] == 8'd255 &&
			  send_operands[57:35] == 23'd0) ?
			   send_operands[57:35] :
			   send_operands[25:3])))) ;
  assign IF_send_operands_BITS_33_TO_26_2_EQ_255_3_AND__ETC___d420 =
	     (send_operands[33:26] == 8'd255 &&
	      send_operands[25:3] != 23'd0 &&
	      !send_operands[25]) ?
	       { send_operands[33:26], sfd__h3095 } :
	       ((send_operands[65:58] == 8'd255 && send_operands[57]) ?
		  send_operands[65:35] :
		  ((send_operands[33:26] == 8'd255 && send_operands[25]) ?
		     send_operands[33:3] :
		     ((send_operands[65:58] == 8'd255 &&
		       send_operands[57:35] == 23'd0 &&
		       send_operands[33:26] == 8'd255 &&
		       send_operands[25:3] == 23'd0) ?
			{ 8'd255,
			  IF_send_operands_BIT_66_4_EQ_send_operands_BIT_ETC___d340 } :
			((send_operands[65:58] == 8'd255 &&
			  send_operands[57:35] == 23'd0) ?
			   send_operands[65:35] :
			   send_operands[33:3])))) ;
  assign IF_send_operands_BITS_65_TO_58_3_EQ_0_6_THEN_8_ETC___d79 =
	     (send_operands[65:58] == 8'd0) ?
	       10'd898 :
	       { {2{b__h3517[7]}}, b__h3517 } ;
  assign IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d333 =
	     send_operands_BITS_65_TO_58_3_EQ_255_4_AND_NOT_ETC___d49 ?
	       ((send_operands[65:58] == 8'd255 &&
		 send_operands[57:35] != 23'd0 &&
		 !send_operands[57]) ?
		  send_operands[65:58] :
		  ((send_operands[33:26] == 8'd255 &&
		    send_operands[25:3] != 23'd0 &&
		    !send_operands[25]) ?
		     send_operands[33:26] :
		     ((send_operands[65:58] == 8'd255 && send_operands[57]) ?
			send_operands[65:58] :
			((send_operands[33:26] == 8'd255 &&
			  send_operands[25]) ?
			   send_operands[33:26] :
			   ((send_operands[65:58] == 8'd255 &&
			     send_operands[57:35] == 23'd0 &&
			     send_operands[33:26] == 8'd255 &&
			     send_operands[25:3] == 23'd0) ?
			      8'd255 :
			      ((send_operands[65:58] == 8'd255 &&
				send_operands[57:35] == 23'd0) ?
				 send_operands[65:58] :
				 send_operands[33:26])))))) :
	       _theResult___snd_exp__h8667 ;
  assign IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d346 =
	     (send_operands[65:58] == 8'd255 &&
	      send_operands[57:35] != 23'd0 &&
	      !send_operands[57]) ?
	       sfd__h3092 :
	       IF_send_operands_BITS_33_TO_26_2_EQ_255_3_AND__ETC___d345 ;
  assign IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d370 =
	     IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d333 ==
	     8'd0 &&
	     (send_operands_BITS_65_TO_58_3_EQ_255_4_AND_NOT_ETC___d49 ?
		IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d346 :
		_theResult___snd_sfd__h8668) ==
	     23'd0 ;
  assign IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d385 =
	     send_operands_BITS_65_TO_58_3_EQ_255_4_AND_NOT_ETC___d49 ?
	       send_operands[65:58] == 8'd255 &&
	       send_operands[57:35] != 23'd0 &&
	       !send_operands[57] ||
	       send_operands[33:26] == 8'd255 &&
	       send_operands[25:3] != 23'd0 &&
	       !send_operands[25] ||
	       send_operands[65:58] == 8'd255 && send_operands[57] ||
	       send_operands[33:26] == 8'd255 && send_operands[25] ||
	       send_operands[65:58] == 8'd255 &&
	       send_operands[57:35] == 23'd0 ||
	       send_operands[33:26] == 8'd255 &&
	       send_operands[25:3] == 23'd0 ||
	       !sfdin__h3123[27] ||
	       IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d135 !=
	       9'd127 :
	       !NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d383 ;
  assign IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d406 =
	     send_operands_BITS_65_TO_58_3_EQ_255_4_AND_NOT_ETC___d49 ?
	       ((send_operands[65:58] == 8'd255 &&
		 send_operands[57:35] != 23'd0 &&
		 !send_operands[57]) ?
		  send_operands[66] :
		  ((send_operands[33:26] == 8'd255 &&
		    send_operands[25:3] != 23'd0 &&
		    !send_operands[25]) ?
		     send_operands[34] :
		     ((send_operands[65:58] == 8'd255 && send_operands[57]) ?
			send_operands[66] :
			((send_operands[33:26] == 8'd255 &&
			  send_operands[25]) ?
			   send_operands[34] :
			   ((send_operands[65:58] == 8'd255 &&
			     send_operands[57:35] == 23'd0 &&
			     send_operands[33:26] == 8'd255 &&
			     send_operands[25:3] == 23'd0) ?
			      send_operands_BIT_66_4_EQ_send_operands_BIT_34_3___d97 &&
			      send_operands[66] :
			      ((send_operands[65:58] == 8'd255 &&
				send_operands[57:35] == 23'd0) ?
				 send_operands[66] :
				 send_operands[34])))))) :
	       ((_theResult___snd_snd_exp__h8074 == 8'd255) ?
		  IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319 :
		  IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d404) ;
  assign IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d410 =
	     IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d333 ==
	     8'd255 &&
	     (send_operands_BITS_65_TO_58_3_EQ_255_4_AND_NOT_ETC___d49 ?
		IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d346 :
		_theResult___snd_sfd__h8668) !=
	     23'd0 ;
  assign IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d444 =
	     send_operands_BITS_65_TO_58_3_EQ_255_4_AND_NOT_ETC___d49 ?
	       ((send_operands[65:58] == 8'd255 &&
		 send_operands[57:35] != 23'd0 &&
		 !send_operands[57]) ?
		  { send_operands[65:58], sfd__h3092 } :
		  IF_send_operands_BITS_33_TO_26_2_EQ_255_3_AND__ETC___d420) :
	       ((_theResult___snd_snd_exp__h8074 == 8'd255) ?
		  IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423 :
		  IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d442) ;
  assign IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d458 =
	     send_operands_BITS_65_TO_58_3_EQ_255_4_AND_NOT_ETC___d49 ?
	       NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 &&
	       sfdin__h3123[27] &&
	       IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d135 ==
	       9'd127 :
	       NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d457 ;
  assign IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d464 =
	     send_operands_BITS_65_TO_58_3_EQ_255_4_AND_NOT_ETC___d49 ?
	       NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 &&
	       sfdin__h3123[27] &&
	       IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d135 ==
	       9'd127 :
	       NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d383 ;
  assign IF_send_operands_BIT_66_4_EQ_send_operands_BIT_ETC___d340 =
	     send_operands_BIT_66_4_EQ_send_operands_BIT_34_3___d97 ?
	       23'd0 :
	       23'd4194304 ;
  assign IF_sfdin058_BIT_4_THEN_2_ELSE_0__q3 = sfdin__h8058[4] ? 2'd2 : 2'd0 ;
  assign NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_TH_ETC___d92 =
	     (IF_send_operands_BITS_33_TO_26_2_EQ_0_2_THEN_8_ETC___d75 ^
	      10'h200) >
	     (IF_send_operands_BITS_65_TO_58_3_EQ_0_6_THEN_8_ETC___d79 ^
	      10'h200) ||
	     IF_send_operands_BITS_33_TO_26_2_EQ_0_2_THEN_8_ETC___d75 ==
	     IF_send_operands_BITS_65_TO_58_3_EQ_0_6_THEN_8_ETC___d79 &&
	     sfdB__h2034 > sfdA__h2033 ;
  assign NOT_IF_send_operands_BITS_65_TO_58_3_EQ_255_4__ETC___d368 =
	     IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d333 !=
	     8'd255 ||
	     (send_operands_BITS_65_TO_58_3_EQ_255_4_AND_NOT_ETC___d49 ?
		IF_send_operands_BITS_65_TO_58_3_EQ_255_4_AND__ETC___d346 :
		_theResult___snd_sfd__h8668) ==
	     23'd0 ;
  assign NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d383 =
	     (NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 &&
	      sfdin__h3123[27] &&
	      IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d135 ==
	      9'd127) |
	     (_theResult___snd_snd_exp__h8074 != 8'd255 &&
	      guard__h3109 != 2'b0) ;
  assign NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d457 =
	     (NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 &&
	      sfdin__h3123[27] &&
	      IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d135 ==
	      9'd127) |
	     (_theResult___snd_exp__h8667 == 8'd255 &&
	      _theResult___snd_sfd__h8668 == 23'd0) ;
  assign NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 =
	     (send_operands[65:58] != 8'd255 ||
	      send_operands[57:35] == 23'd0 ||
	      send_operands[57]) &&
	     (send_operands[33:26] != 8'd255 ||
	      send_operands[25:3] == 23'd0 ||
	      send_operands[25]) &&
	     (send_operands[65:58] != 8'd255 || !send_operands[57]) &&
	     (send_operands[33:26] != 8'd255 || !send_operands[25]) &&
	     (send_operands[65:58] != 8'd255 ||
	      send_operands[57:35] != 23'd0) &&
	     (send_operands[33:26] != 8'd255 ||
	      send_operands[25:3] != 23'd0) ;
  assign _0_CONCAT_IF_IF_IF_NOT_IF_send_operands_BITS_33_ETC___d255 =
	     ({ 4'd0,
		IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d252 } ^
	      9'h100) <=
	     (IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d135 -
	      9'd386 ^
	      9'h100) ;
  assign _0b0_CONCAT_IF_NOT_IF_send_operands_BITS_33_TO__ETC___d114 =
	     opB__h2016 >> diff__h2020 ;
  assign _theResult___exp__h8590 =
	     sfd__h8167[24] ?
	       ((_theResult___snd_snd_exp__h8074 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h8679) :
	       IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d307 ;
  assign _theResult___fst_exp__h8064 =
	     sfdin__h3123[27] ?
	       _theResult___fst_exp__h8093 :
	       _theResult___fst_exp__h8149 ;
  assign _theResult___fst_exp__h8093 =
	     (din_exp__h8021 == 8'd0) ? 8'd2 : din_exp__h8021 + 8'd1 ;
  assign _theResult___fst_exp__h8108 =
	     (din_exp__h8021 == 8'd0) ? 8'd1 : din_exp__h8021 ;
  assign _theResult___fst_exp__h8140 =
	     din_exp__h8021 -
	     { 3'd0,
	       IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d252 } ;
  assign _theResult___fst_exp__h8143 =
	     _0_CONCAT_IF_IF_IF_NOT_IF_send_operands_BITS_33_ETC___d255 ?
	       _theResult___fst_exp__h8140 :
	       din_exp__h8021 ;
  assign _theResult___fst_exp__h8146 =
	     (!sfdin__h3123[27] && !sfdin__h3123[26] && !sfdin__h3123[25] &&
	      !sfdin__h3123[24] &&
	      !sfdin__h3123[23] &&
	      !sfdin__h3123[22] &&
	      !sfdin__h3123[21] &&
	      !sfdin__h3123[20] &&
	      !sfdin__h3123[19] &&
	      !sfdin__h3123[18] &&
	      !sfdin__h3123[17] &&
	      !sfdin__h3123[16] &&
	      !sfdin__h3123[15] &&
	      !sfdin__h3123[14] &&
	      !sfdin__h3123[13] &&
	      !sfdin__h3123[12] &&
	      !sfdin__h3123[11] &&
	      !sfdin__h3123[10] &&
	      !sfdin__h3123[9] &&
	      !sfdin__h3123[8] &&
	      !sfdin__h3123[7] &&
	      !sfdin__h3123[6] &&
	      !sfdin__h3123[5] &&
	      !sfdin__h3123[4] &&
	      !sfdin__h3123[3] &&
	      !sfdin__h3123[2] &&
	      !sfdin__h3123[1] &&
	      !sfdin__h3123[0]) ?
	       8'd0 :
	       _theResult___fst_exp__h8143 ;
  assign _theResult___fst_exp__h8149 =
	     (!sfdin__h3123[27] && sfdin__h3123[26]) ?
	       _theResult___fst_exp__h8108 :
	       _theResult___fst_exp__h8146 ;
  assign _theResult___sfd__h8591 =
	     sfd__h8167[24] ?
	       ((_theResult___snd_snd_exp__h8074 == 8'd254) ?
		  23'd0 :
		  sfd__h8167[23:1]) :
	       sfd__h8167[22:0] ;
  assign _theResult___snd__h8088 = { sfdin__h3123[26:0], 1'd0 } ;
  assign _theResult___snd__h8102 =
	     (!sfdin__h3123[27] && sfdin__h3123[26]) ?
	       _theResult___snd__h8104 :
	       _theResult___snd__h8116 ;
  assign _theResult___snd__h8104 = { sfdin__h3123[25:0], 2'd0 } ;
  assign _theResult___snd__h8116 =
	     (!sfdin__h3123[27] && !sfdin__h3123[26] && !sfdin__h3123[25] &&
	      !sfdin__h3123[24] &&
	      !sfdin__h3123[23] &&
	      !sfdin__h3123[22] &&
	      !sfdin__h3123[21] &&
	      !sfdin__h3123[20] &&
	      !sfdin__h3123[19] &&
	      !sfdin__h3123[18] &&
	      !sfdin__h3123[17] &&
	      !sfdin__h3123[16] &&
	      !sfdin__h3123[15] &&
	      !sfdin__h3123[14] &&
	      !sfdin__h3123[13] &&
	      !sfdin__h3123[12] &&
	      !sfdin__h3123[11] &&
	      !sfdin__h3123[10] &&
	      !sfdin__h3123[9] &&
	      !sfdin__h3123[8] &&
	      !sfdin__h3123[7] &&
	      !sfdin__h3123[6] &&
	      !sfdin__h3123[5] &&
	      !sfdin__h3123[4] &&
	      !sfdin__h3123[3] &&
	      !sfdin__h3123[2] &&
	      !sfdin__h3123[1] &&
	      !sfdin__h3123[0]) ?
	       sfdin__h3123 :
	       _theResult___snd__h8122 ;
  assign _theResult___snd__h8122 =
	     { IF_0_CONCAT_IF_IF_IF_NOT_IF_send_operands_BITS_ETC__q2[25:0],
	       2'd0 } ;
  assign _theResult___snd__h8138 =
	     sfdin__h3123 <<
	     IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d252 ;
  assign _theResult___snd_exp__h8667 =
	     (_theResult___snd_snd_exp__h8074 == 8'd255) ?
	       _theResult___snd_snd_exp__h8074 :
	       _theResult___snd_exp__h8664 ;
  assign _theResult___snd_fst__h8196 =
	     { IF_sfdin058_BIT_4_THEN_2_ELSE_0__q3[1],
	       { sfdin__h8058[3:0], 23'd0 } != 27'd0 } ;
  assign _theResult___snd_fst_exp__h8067 =
	     (sfdin__h3123[27] &&
	      IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d135 ==
	      9'd127) ?
	       8'd254 :
	       _theResult___fst_exp__h8064 ;
  assign _theResult___snd_fst_sfd__h8068 =
	     (sfdin__h3123[27] &&
	      IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d135 ==
	      9'd127) ?
	       23'd8388607 :
	       sfdin__h8058[27:5] ;
  assign _theResult___snd_sfd__h8668 =
	     (_theResult___snd_snd_exp__h8074 == 8'd255) ?
	       _theResult___snd_snd_sfd__h8075 :
	       _theResult___snd_sfd__h8665 ;
  assign _theResult___snd_snd_exp__h8074 =
	     NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 ?
	       _theResult___snd_fst_exp__h8067 :
	       8'd0 ;
  assign _theResult___snd_snd_sfd__h8075 =
	     NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 ?
	       _theResult___snd_fst_sfd__h8068 :
	       23'd0 ;
  assign a__h2000 =
	     { 1'b0,
	       NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_TH_ETC___d92 ?
		 send_operands[33:26] != 8'd0 :
		 send_operands[65:58] != 8'd0,
	       NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_TH_ETC___d92 ?
		 send_operands[25:3] :
		 send_operands[57:35],
	       3'b0 } ;
  assign b__h2002 =
	     NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 ?
	       IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d125 :
	       opB__h2016 ;
  assign b__h3503 = send_operands[33:26] - 8'd127 ;
  assign b__h3517 = send_operands[65:58] - 8'd127 ;
  assign diff__h2020 =
	     NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_TH_ETC___d92 ?
	       x__h3621[7:0] :
	       x__h3628[7:0] ;
  assign din_exp021_MINUS_127__q1 = din_exp__h8021 - 8'd127 ;
  assign din_exp__h8021 =
	     NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_TH_ETC___d92 ?
	       send_operands[33:26] :
	       send_operands[65:58] ;
  assign din_inc___2_exp__h8679 = _theResult___snd_snd_exp__h8074 + 8'd1 ;
  assign guard__h3074 =
	     (sfdin__h3123[27] &&
	      IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ__ETC___d135 ==
	      9'd127) ?
	       2'd3 :
	       _theResult___snd_fst__h8196 ;
  assign guard__h3109 =
	     NOT_send_operands_BITS_65_TO_58_3_EQ_255_4_7_O_ETC___d71 ?
	       guard__h3074 :
	       2'd0 ;
  assign guard__h3657 = opB__h2016 << y__h3723 ;
  assign opB__h2016 =
	     { 1'b0,
	       IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d112 } ;
  assign out_exp__h8593 =
	     _theResult___snd_snd_sfd__h8075[0] ?
	       _theResult___exp__h8590 :
	       _theResult___snd_snd_exp__h8074 ;
  assign out_sfd__h8594 =
	     _theResult___snd_snd_sfd__h8075[0] ?
	       _theResult___sfd__h8591 :
	       _theResult___snd_snd_sfd__h8075 ;
  assign result__h3611 = a__h2000 - b__h2002 ;
  assign result__h3664 =
	     { _0b0_CONCAT_IF_NOT_IF_send_operands_BITS_33_TO__ETC___d114[27:1],
	       _0b0_CONCAT_IF_NOT_IF_send_operands_BITS_33_TO__ETC___d114[0] |
	       y__h3696 } ;
  assign result__h3797 = a__h2000 + b__h2002 ;
  assign send_operands_BITS_65_TO_58_3_EQ_255_4_AND_NOT_ETC___d49 =
	     send_operands[65:58] == 8'd255 &&
	     send_operands[57:35] != 23'd0 &&
	     !send_operands[57] ||
	     send_operands[33:26] == 8'd255 && send_operands[25:3] != 23'd0 &&
	     !send_operands[25] ||
	     send_operands[65:58] == 8'd255 && send_operands[57] ||
	     send_operands[33:26] == 8'd255 && send_operands[25] ||
	     send_operands[65:58] == 8'd255 &&
	     send_operands[57:35] == 23'd0 ||
	     send_operands[33:26] == 8'd255 && send_operands[25:3] == 23'd0 ;
  assign send_operands_BIT_66_4_EQ_send_operands_BIT_34_3___d97 =
	     send_operands[66] == send_operands[34] ;
  assign sfdA__h2033 =
	     { 1'b0,
	       send_operands[65:58] != 8'd0,
	       send_operands[57:35],
	       3'b0 } ;
  assign sfdB__h2034 =
	     { 1'b0,
	       send_operands[33:26] != 8'd0,
	       send_operands[25:3],
	       3'b0 } ;
  assign sfd__h3092 = { 1'd1, send_operands[56:35] } ;
  assign sfd__h3095 = { 1'd1, send_operands[24:3] } ;
  assign sfd__h8167 =
	     { 1'b0,
	       _theResult___snd_snd_exp__h8074 != 8'd0,
	       _theResult___snd_snd_sfd__h8075 } +
	     25'd1 ;
  assign sfdin__h3123 =
	     IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d99 ?
	       result__h3611 :
	       result__h3797 ;
  assign sfdin__h8058 =
	     sfdin__h3123[27] ?
	       _theResult___snd__h8088 :
	       _theResult___snd__h8102 ;
  assign x__h3621 =
	     IF_send_operands_BITS_33_TO_26_2_EQ_0_2_THEN_8_ETC___d75 -
	     IF_send_operands_BITS_65_TO_58_3_EQ_0_6_THEN_8_ETC___d79 ;
  assign x__h3628 =
	     IF_send_operands_BITS_65_TO_58_3_EQ_0_6_THEN_8_ETC___d79 -
	     IF_send_operands_BITS_33_TO_26_2_EQ_0_2_THEN_8_ETC___d75 ;
  assign y__h3696 = guard__h3657 != 28'd0 ;
  assign y__h3723 = 8'd28 - diff__h2020 ;
  always@(guard__h3109 or
	  _theResult___snd_snd_exp__h8074 or
	  out_exp__h8593 or _theResult___exp__h8590)
  begin
    case (guard__h3109)
      2'b0, 2'b01:
	  CASE_guard109_0b0_theResult___snd_snd_exp074_0_ETC__q4 =
	      _theResult___snd_snd_exp__h8074;
      2'b10:
	  CASE_guard109_0b0_theResult___snd_snd_exp074_0_ETC__q4 =
	      out_exp__h8593;
      2'b11:
	  CASE_guard109_0b0_theResult___snd_snd_exp074_0_ETC__q4 =
	      _theResult___exp__h8590;
    endcase
  end
  always@(guard__h3109 or
	  _theResult___snd_snd_exp__h8074 or _theResult___exp__h8590)
  begin
    case (guard__h3109)
      2'b0, 2'b01:
	  CASE_guard109_0b0_theResult___snd_snd_exp074_0_ETC__q5 =
	      _theResult___snd_snd_exp__h8074;
      2'b10, 2'b11:
	  CASE_guard109_0b0_theResult___snd_snd_exp074_0_ETC__q5 =
	      _theResult___exp__h8590;
    endcase
  end
  always@(send_operands or
	  CASE_guard109_0b0_theResult___snd_snd_exp074_0_ETC__q4 or
	  _theResult___snd_snd_exp__h8074 or
	  guard__h3109 or
	  IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_4__ETC___d324 or
	  IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d322 or
	  CASE_guard109_0b0_theResult___snd_snd_exp074_0_ETC__q5)
  begin
    case (send_operands[2:0])
      3'd0:
	  _theResult___snd_exp__h8664 =
	      CASE_guard109_0b0_theResult___snd_snd_exp074_0_ETC__q4;
      3'd1: _theResult___snd_exp__h8664 = _theResult___snd_snd_exp__h8074;
      3'd2:
	  _theResult___snd_exp__h8664 =
	      (guard__h3109 == 2'b0) ?
		_theResult___snd_snd_exp__h8074 :
		IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_4__ETC___d324;
      3'd3:
	  _theResult___snd_exp__h8664 =
	      IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d322;
      3'd4:
	  _theResult___snd_exp__h8664 =
	      CASE_guard109_0b0_theResult___snd_snd_exp074_0_ETC__q5;
      default: _theResult___snd_exp__h8664 = 8'd0;
    endcase
  end
  always@(guard__h3109 or
	  _theResult___snd_snd_sfd__h8075 or
	  out_sfd__h8594 or _theResult___sfd__h8591)
  begin
    case (guard__h3109)
      2'b0, 2'b01:
	  CASE_guard109_0b0_theResult___snd_snd_sfd075_0_ETC__q6 =
	      _theResult___snd_snd_sfd__h8075;
      2'b10:
	  CASE_guard109_0b0_theResult___snd_snd_sfd075_0_ETC__q6 =
	      out_sfd__h8594;
      2'b11:
	  CASE_guard109_0b0_theResult___snd_snd_sfd075_0_ETC__q6 =
	      _theResult___sfd__h8591;
    endcase
  end
  always@(guard__h3109 or
	  _theResult___snd_snd_sfd__h8075 or _theResult___sfd__h8591)
  begin
    case (guard__h3109)
      2'b0, 2'b01:
	  CASE_guard109_0b0_theResult___snd_snd_sfd075_0_ETC__q7 =
	      _theResult___snd_snd_sfd__h8075;
      2'b10, 2'b11:
	  CASE_guard109_0b0_theResult___snd_snd_sfd075_0_ETC__q7 =
	      _theResult___sfd__h8591;
    endcase
  end
  always@(send_operands or
	  CASE_guard109_0b0_theResult___snd_snd_sfd075_0_ETC__q6 or
	  _theResult___snd_snd_sfd__h8075 or
	  guard__h3109 or
	  IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_4__ETC___d358 or
	  IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d357 or
	  CASE_guard109_0b0_theResult___snd_snd_sfd075_0_ETC__q7)
  begin
    case (send_operands[2:0])
      3'd0:
	  _theResult___snd_sfd__h8665 =
	      CASE_guard109_0b0_theResult___snd_snd_sfd075_0_ETC__q6;
      3'd1: _theResult___snd_sfd__h8665 = _theResult___snd_snd_sfd__h8075;
      3'd2:
	  _theResult___snd_sfd__h8665 =
	      (guard__h3109 == 2'b0) ?
		_theResult___snd_snd_sfd__h8075 :
		IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_4__ETC___d358;
      3'd3:
	  _theResult___snd_sfd__h8665 =
	      IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d357;
      3'd4:
	  _theResult___snd_sfd__h8665 =
	      CASE_guard109_0b0_theResult___snd_snd_sfd075_0_ETC__q7;
      default: _theResult___snd_sfd__h8665 = 23'd0;
    endcase
  end
  always@(guard__h3109 or
	  IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319)
  begin
    case (guard__h3109)
      2'b0, 2'b01, 2'b10:
	  CASE_guard109_0b0_IF_NOT_IF_send_operands_BITS_ETC__q8 =
	      IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319;
      2'd3:
	  CASE_guard109_0b0_IF_NOT_IF_send_operands_BITS_ETC__q8 =
	      guard__h3109 == 2'b11 &&
	      IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319;
    endcase
  end
  always@(guard__h3109 or
	  IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319)
  begin
    case (guard__h3109)
      2'b0, 2'b01:
	  CASE_guard109_0b0_IF_NOT_IF_send_operands_BITS_ETC__q9 =
	      IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319;
      default: CASE_guard109_0b0_IF_NOT_IF_send_operands_BITS_ETC__q9 =
		   (guard__h3109 == 2'b10 || guard__h3109 == 2'b11) &&
		   IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319;
    endcase
  end
  always@(send_operands or
	  IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319 or
	  CASE_guard109_0b0_IF_NOT_IF_send_operands_BITS_ETC__q8 or
	  CASE_guard109_0b0_IF_NOT_IF_send_operands_BITS_ETC__q9)
  begin
    case (send_operands[2:0])
      3'd0:
	  IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d404 =
	      CASE_guard109_0b0_IF_NOT_IF_send_operands_BITS_ETC__q8;
      3'd2, 3'd3:
	  IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d404 =
	      IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319;
      3'd4:
	  IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d404 =
	      CASE_guard109_0b0_IF_NOT_IF_send_operands_BITS_ETC__q9;
      default: IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d404 =
		   send_operands[2:0] == 3'd1 &&
		   IF_NOT_IF_send_operands_BITS_33_TO_26_2_EQ_0_2_ETC___d319;
    endcase
  end
  always@(guard__h3109 or
	  IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423 or
	  _theResult___snd_snd_sfd__h8075 or
	  IF_0b0_CONCAT_NOT_IF_NOT_send_operands_BITS_65_ETC___d427)
  begin
    case (guard__h3109)
      2'b0, 2'b01:
	  CASE_guard109_0b0_IF_IF_IF_NOT_IF_send_operand_ETC__q10 =
	      IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423;
      2'b10:
	  CASE_guard109_0b0_IF_IF_IF_NOT_IF_send_operand_ETC__q10 =
	      _theResult___snd_snd_sfd__h8075[0] ?
		IF_0b0_CONCAT_NOT_IF_NOT_send_operands_BITS_65_ETC___d427 :
		IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423;
      2'b11:
	  CASE_guard109_0b0_IF_IF_IF_NOT_IF_send_operand_ETC__q10 =
	      IF_0b0_CONCAT_NOT_IF_NOT_send_operands_BITS_65_ETC___d427;
    endcase
  end
  always@(guard__h3109 or
	  IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423 or
	  IF_0b0_CONCAT_NOT_IF_NOT_send_operands_BITS_65_ETC___d427)
  begin
    case (guard__h3109)
      2'b0, 2'b01:
	  CASE_guard109_0b0_IF_IF_IF_NOT_IF_send_operand_ETC__q11 =
	      IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423;
      2'b10, 2'b11:
	  CASE_guard109_0b0_IF_IF_IF_NOT_IF_send_operand_ETC__q11 =
	      IF_0b0_CONCAT_NOT_IF_NOT_send_operands_BITS_65_ETC___d427;
    endcase
  end
  always@(send_operands or
	  CASE_guard109_0b0_IF_IF_IF_NOT_IF_send_operand_ETC__q10 or
	  IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423 or
	  IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d437 or
	  IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d435 or
	  CASE_guard109_0b0_IF_IF_IF_NOT_IF_send_operand_ETC__q11)
  begin
    case (send_operands[2:0])
      3'd0:
	  IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d442 =
	      CASE_guard109_0b0_IF_IF_IF_NOT_IF_send_operand_ETC__q10;
      3'd1:
	  IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d442 =
	      IF_IF_IF_NOT_IF_send_operands_BITS_33_TO_26_2__ETC___d423;
      3'd2:
	  IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d442 =
	      IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d437;
      3'd3:
	  IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d442 =
	      IF_IF_NOT_send_operands_BITS_65_TO_58_3_EQ_255_ETC___d435;
      3'd4:
	  IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d442 =
	      CASE_guard109_0b0_IF_IF_IF_NOT_IF_send_operand_ETC__q11;
      default: IF_send_operands_BITS_2_TO_0_65_EQ_0_66_THEN_I_ETC___d442 =
		   31'd0;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_stage_out_0 <= `BSV_ASSIGNMENT_DELAY 37'd0;
	rg_stage_out_1 <= `BSV_ASSIGNMENT_DELAY 37'd0;
	rg_stage_out_2 <= `BSV_ASSIGNMENT_DELAY 37'd0;
	rg_stage_out_3 <= `BSV_ASSIGNMENT_DELAY 37'd0;
	rg_stage_valid_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_stage_valid_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_stage_valid_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_stage_valid_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (rg_stage_out_0$EN)
	  rg_stage_out_0 <= `BSV_ASSIGNMENT_DELAY rg_stage_out_0$D_IN;
	if (rg_stage_out_1$EN)
	  rg_stage_out_1 <= `BSV_ASSIGNMENT_DELAY rg_stage_out_1$D_IN;
	if (rg_stage_out_2$EN)
	  rg_stage_out_2 <= `BSV_ASSIGNMENT_DELAY rg_stage_out_2$D_IN;
	if (rg_stage_out_3$EN)
	  rg_stage_out_3 <= `BSV_ASSIGNMENT_DELAY rg_stage_out_3$D_IN;
	if (rg_stage_valid_0$EN)
	  rg_stage_valid_0 <= `BSV_ASSIGNMENT_DELAY rg_stage_valid_0$D_IN;
	if (rg_stage_valid_1$EN)
	  rg_stage_valid_1 <= `BSV_ASSIGNMENT_DELAY rg_stage_valid_1$D_IN;
	if (rg_stage_valid_2$EN)
	  rg_stage_valid_2 <= `BSV_ASSIGNMENT_DELAY rg_stage_valid_2$D_IN;
	if (rg_stage_valid_3$EN)
	  rg_stage_valid_3 <= `BSV_ASSIGNMENT_DELAY rg_stage_valid_3$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_stage_out_0 = 37'h0AAAAAAAAA;
    rg_stage_out_1 = 37'h0AAAAAAAAA;
    rg_stage_out_2 = 37'h0AAAAAAAAA;
    rg_stage_out_3 = 37'h0AAAAAAAAA;
    rg_stage_valid_0 = 1'h0;
    rg_stage_valid_1 = 1'h0;
    rg_stage_valid_2 = 1'h0;
    rg_stage_valid_3 = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mk_fpu_add_sub_sp_instance

